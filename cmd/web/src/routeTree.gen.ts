/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteRouteImport } from './routes/_protected/route'
import { Route as ProtectedLayoutRouteRouteImport } from './routes/_protected/_layout/route'
import { Route as AuthSignupRouteRouteImport } from './routes/_auth/signup/route'
import { Route as AuthSigninRouteRouteImport } from './routes/_auth/signin/route'
import { Route as AuthOnboardingRouteRouteImport } from './routes/_auth/onboarding/route'
import { Route as ProtectedCallChannelIdRouteRouteImport } from './routes/_protected/call/$channelId/route'
import { Route as ProtectedLayoutNotificationRouteRouteImport } from './routes/_protected/_layout/notification/route'
import { Route as ProtectedLayoutFriendRouteRouteImport } from './routes/_protected/_layout/friend/route'
import { Route as ProtectedLayouthomeIndexRouteImport } from './routes/_protected/_layout/(home)/index'
import { Route as ProtectedLayoutChatFriendIdRouteRouteImport } from './routes/_protected/_layout/chat/$friendId/route'

const ProtectedRouteRoute = ProtectedRouteRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedLayoutRouteRoute = ProtectedLayoutRouteRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const AuthSignupRouteRoute = AuthSignupRouteRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRouteRoute = AuthSigninRouteRouteImport.update({
  id: '/_auth/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardingRouteRoute = AuthOnboardingRouteRouteImport.update({
  id: '/_auth/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedCallChannelIdRouteRoute =
  ProtectedCallChannelIdRouteRouteImport.update({
    id: '/call/$channelId',
    path: '/call/$channelId',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedLayoutNotificationRouteRoute =
  ProtectedLayoutNotificationRouteRouteImport.update({
    id: '/notification',
    path: '/notification',
    getParentRoute: () => ProtectedLayoutRouteRoute,
  } as any)
const ProtectedLayoutFriendRouteRoute =
  ProtectedLayoutFriendRouteRouteImport.update({
    id: '/friend',
    path: '/friend',
    getParentRoute: () => ProtectedLayoutRouteRoute,
  } as any)
const ProtectedLayouthomeIndexRoute =
  ProtectedLayouthomeIndexRouteImport.update({
    id: '/(home)/',
    path: '/',
    getParentRoute: () => ProtectedLayoutRouteRoute,
  } as any)
const ProtectedLayoutChatFriendIdRouteRoute =
  ProtectedLayoutChatFriendIdRouteRouteImport.update({
    id: '/chat/$friendId',
    path: '/chat/$friendId',
    getParentRoute: () => ProtectedLayoutRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '': typeof ProtectedLayoutRouteRouteWithChildren
  '/onboarding': typeof AuthOnboardingRouteRoute
  '/signin': typeof AuthSigninRouteRoute
  '/signup': typeof AuthSignupRouteRoute
  '/friend': typeof ProtectedLayoutFriendRouteRoute
  '/notification': typeof ProtectedLayoutNotificationRouteRoute
  '/call/$channelId': typeof ProtectedCallChannelIdRouteRoute
  '/chat/$friendId': typeof ProtectedLayoutChatFriendIdRouteRoute
  '/': typeof ProtectedLayouthomeIndexRoute
}
export interface FileRoutesByTo {
  '': typeof ProtectedRouteRouteWithChildren
  '/onboarding': typeof AuthOnboardingRouteRoute
  '/signin': typeof AuthSigninRouteRoute
  '/signup': typeof AuthSignupRouteRoute
  '/friend': typeof ProtectedLayoutFriendRouteRoute
  '/notification': typeof ProtectedLayoutNotificationRouteRoute
  '/call/$channelId': typeof ProtectedCallChannelIdRouteRoute
  '/chat/$friendId': typeof ProtectedLayoutChatFriendIdRouteRoute
  '/': typeof ProtectedLayouthomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_auth/onboarding': typeof AuthOnboardingRouteRoute
  '/_auth/signin': typeof AuthSigninRouteRoute
  '/_auth/signup': typeof AuthSignupRouteRoute
  '/_protected/_layout': typeof ProtectedLayoutRouteRouteWithChildren
  '/_protected/_layout/friend': typeof ProtectedLayoutFriendRouteRoute
  '/_protected/_layout/notification': typeof ProtectedLayoutNotificationRouteRoute
  '/_protected/call/$channelId': typeof ProtectedCallChannelIdRouteRoute
  '/_protected/_layout/chat/$friendId': typeof ProtectedLayoutChatFriendIdRouteRoute
  '/_protected/_layout/(home)/': typeof ProtectedLayouthomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/friend'
    | '/notification'
    | '/call/$channelId'
    | '/chat/$friendId'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/friend'
    | '/notification'
    | '/call/$channelId'
    | '/chat/$friendId'
    | '/'
  id:
    | '__root__'
    | '/_protected'
    | '/_auth/onboarding'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_protected/_layout'
    | '/_protected/_layout/friend'
    | '/_protected/_layout/notification'
    | '/_protected/call/$channelId'
    | '/_protected/_layout/chat/$friendId'
    | '/_protected/_layout/(home)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AuthOnboardingRouteRoute: typeof AuthOnboardingRouteRoute
  AuthSigninRouteRoute: typeof AuthSigninRouteRoute
  AuthSignupRouteRoute: typeof AuthSignupRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/_layout': {
      id: '/_protected/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedLayoutRouteRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboarding': {
      id: '/_auth/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/call/$channelId': {
      id: '/_protected/call/$channelId'
      path: '/call/$channelId'
      fullPath: '/call/$channelId'
      preLoaderRoute: typeof ProtectedCallChannelIdRouteRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/_layout/notification': {
      id: '/_protected/_layout/notification'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof ProtectedLayoutNotificationRouteRouteImport
      parentRoute: typeof ProtectedLayoutRouteRoute
    }
    '/_protected/_layout/friend': {
      id: '/_protected/_layout/friend'
      path: '/friend'
      fullPath: '/friend'
      preLoaderRoute: typeof ProtectedLayoutFriendRouteRouteImport
      parentRoute: typeof ProtectedLayoutRouteRoute
    }
    '/_protected/_layout/(home)/': {
      id: '/_protected/_layout/(home)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedLayouthomeIndexRouteImport
      parentRoute: typeof ProtectedLayoutRouteRoute
    }
    '/_protected/_layout/chat/$friendId': {
      id: '/_protected/_layout/chat/$friendId'
      path: '/chat/$friendId'
      fullPath: '/chat/$friendId'
      preLoaderRoute: typeof ProtectedLayoutChatFriendIdRouteRouteImport
      parentRoute: typeof ProtectedLayoutRouteRoute
    }
  }
}

interface ProtectedLayoutRouteRouteChildren {
  ProtectedLayoutFriendRouteRoute: typeof ProtectedLayoutFriendRouteRoute
  ProtectedLayoutNotificationRouteRoute: typeof ProtectedLayoutNotificationRouteRoute
  ProtectedLayoutChatFriendIdRouteRoute: typeof ProtectedLayoutChatFriendIdRouteRoute
  ProtectedLayouthomeIndexRoute: typeof ProtectedLayouthomeIndexRoute
}

const ProtectedLayoutRouteRouteChildren: ProtectedLayoutRouteRouteChildren = {
  ProtectedLayoutFriendRouteRoute: ProtectedLayoutFriendRouteRoute,
  ProtectedLayoutNotificationRouteRoute: ProtectedLayoutNotificationRouteRoute,
  ProtectedLayoutChatFriendIdRouteRoute: ProtectedLayoutChatFriendIdRouteRoute,
  ProtectedLayouthomeIndexRoute: ProtectedLayouthomeIndexRoute,
}

const ProtectedLayoutRouteRouteWithChildren =
  ProtectedLayoutRouteRoute._addFileChildren(ProtectedLayoutRouteRouteChildren)

interface ProtectedRouteRouteChildren {
  ProtectedLayoutRouteRoute: typeof ProtectedLayoutRouteRouteWithChildren
  ProtectedCallChannelIdRouteRoute: typeof ProtectedCallChannelIdRouteRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedLayoutRouteRoute: ProtectedLayoutRouteRouteWithChildren,
  ProtectedCallChannelIdRouteRoute: ProtectedCallChannelIdRouteRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AuthOnboardingRouteRoute: AuthOnboardingRouteRoute,
  AuthSigninRouteRoute: AuthSigninRouteRoute,
  AuthSignupRouteRoute: AuthSignupRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
