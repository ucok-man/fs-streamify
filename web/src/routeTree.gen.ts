/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as protectedLayoutRouteImport } from './routes/(protected)/_layout/route'
import { Route as authSignupRouteImport } from './routes/(auth)/signup/route'
import { Route as authSigninRouteImport } from './routes/(auth)/signin/route'
import { Route as authOnboardingRouteImport } from './routes/(auth)/onboarding/route'
import { Route as protectedLayoutIndexImport } from './routes/(protected)/_layout/index'
import { Route as protectedCallIdRouteImport } from './routes/(protected)/call/$id/route'
import { Route as protectedLayoutNotificationRouteImport } from './routes/(protected)/_layout/notification/route'
import { Route as protectedLayoutChatIdRouteImport } from './routes/(protected)/_layout/chat/$id/route'

// Create Virtual Routes

const protectedImport = createFileRoute('/(protected)')()

// Create/Update Routes

const protectedRoute = protectedImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const protectedLayoutRouteRoute = protectedLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => protectedRoute,
} as any)

const authSignupRouteRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const authSigninRouteRoute = authSigninRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const authOnboardingRouteRoute = authOnboardingRouteImport.update({
  id: '/(auth)/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const protectedLayoutIndexRoute = protectedLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => protectedLayoutRouteRoute,
} as any)

const protectedCallIdRouteRoute = protectedCallIdRouteImport.update({
  id: '/call/$id',
  path: '/call/$id',
  getParentRoute: () => protectedRoute,
} as any)

const protectedLayoutNotificationRouteRoute =
  protectedLayoutNotificationRouteImport.update({
    id: '/notification',
    path: '/notification',
    getParentRoute: () => protectedLayoutRouteRoute,
  } as any)

const protectedLayoutChatIdRouteRoute = protectedLayoutChatIdRouteImport.update(
  {
    id: '/chat/$id',
    path: '/chat/$id',
    getParentRoute: () => protectedLayoutRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/onboarding': {
      id: '/(auth)/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_layout': {
      id: '/(protected)/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedLayoutRouteImport
      parentRoute: typeof protectedRoute
    }
    '/(protected)/_layout/notification': {
      id: '/(protected)/_layout/notification'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof protectedLayoutNotificationRouteImport
      parentRoute: typeof protectedLayoutRouteImport
    }
    '/(protected)/call/$id': {
      id: '/(protected)/call/$id'
      path: '/call/$id'
      fullPath: '/call/$id'
      preLoaderRoute: typeof protectedCallIdRouteImport
      parentRoute: typeof protectedImport
    }
    '/(protected)/_layout/': {
      id: '/(protected)/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedLayoutIndexImport
      parentRoute: typeof protectedLayoutRouteImport
    }
    '/(protected)/_layout/chat/$id': {
      id: '/(protected)/_layout/chat/$id'
      path: '/chat/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof protectedLayoutChatIdRouteImport
      parentRoute: typeof protectedLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface protectedLayoutRouteRouteChildren {
  protectedLayoutNotificationRouteRoute: typeof protectedLayoutNotificationRouteRoute
  protectedLayoutIndexRoute: typeof protectedLayoutIndexRoute
  protectedLayoutChatIdRouteRoute: typeof protectedLayoutChatIdRouteRoute
}

const protectedLayoutRouteRouteChildren: protectedLayoutRouteRouteChildren = {
  protectedLayoutNotificationRouteRoute: protectedLayoutNotificationRouteRoute,
  protectedLayoutIndexRoute: protectedLayoutIndexRoute,
  protectedLayoutChatIdRouteRoute: protectedLayoutChatIdRouteRoute,
}

const protectedLayoutRouteRouteWithChildren =
  protectedLayoutRouteRoute._addFileChildren(protectedLayoutRouteRouteChildren)

interface protectedRouteChildren {
  protectedLayoutRouteRoute: typeof protectedLayoutRouteRouteWithChildren
  protectedCallIdRouteRoute: typeof protectedCallIdRouteRoute
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedLayoutRouteRoute: protectedLayoutRouteRouteWithChildren,
  protectedCallIdRouteRoute: protectedCallIdRouteRoute,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRoute
  '/onboarding': typeof authOnboardingRouteRoute
  '/signin': typeof authSigninRouteRoute
  '/signup': typeof authSignupRouteRoute
  '/': typeof protectedLayoutIndexRoute
  '/notification': typeof protectedLayoutNotificationRouteRoute
  '/call/$id': typeof protectedCallIdRouteRoute
  '/chat/$id': typeof protectedLayoutChatIdRouteRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedRoute
  '/onboarding': typeof authOnboardingRouteRoute
  '/signin': typeof authSigninRouteRoute
  '/signup': typeof authSignupRouteRoute
  '/notification': typeof protectedLayoutNotificationRouteRoute
  '/call/$id': typeof protectedCallIdRouteRoute
  '/': typeof protectedLayoutIndexRoute
  '/chat/$id': typeof protectedLayoutChatIdRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRoute
  '/(auth)/onboarding': typeof authOnboardingRouteRoute
  '/(auth)/signin': typeof authSigninRouteRoute
  '/(auth)/signup': typeof authSignupRouteRoute
  '/(protected)': typeof protectedRouteWithChildren
  '/(protected)/_layout': typeof protectedLayoutRouteRouteWithChildren
  '/(protected)/_layout/notification': typeof protectedLayoutNotificationRouteRoute
  '/(protected)/call/$id': typeof protectedCallIdRouteRoute
  '/(protected)/_layout/': typeof protectedLayoutIndexRoute
  '/(protected)/_layout/chat/$id': typeof protectedLayoutChatIdRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/'
    | '/notification'
    | '/call/$id'
    | '/chat/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/onboarding'
    | '/signin'
    | '/signup'
    | '/notification'
    | '/call/$id'
    | '/'
    | '/chat/$id'
  id:
    | '__root__'
    | '/_protected'
    | '/(auth)/onboarding'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/(protected)'
    | '/(protected)/_layout'
    | '/(protected)/_layout/notification'
    | '/(protected)/call/$id'
    | '/(protected)/_layout/'
    | '/(protected)/_layout/chat/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRoute
  authOnboardingRouteRoute: typeof authOnboardingRouteRoute
  authSigninRouteRoute: typeof authSigninRouteRoute
  authSignupRouteRoute: typeof authSignupRouteRoute
  protectedRoute: typeof protectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRoute,
  authOnboardingRouteRoute: authOnboardingRouteRoute,
  authSigninRouteRoute: authSigninRouteRoute,
  authSignupRouteRoute: authSignupRouteRoute,
  protectedRoute: protectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/(auth)/onboarding",
        "/(auth)/signin",
        "/(auth)/signup",
        "/(protected)"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx"
    },
    "/(auth)/onboarding": {
      "filePath": "(auth)/onboarding/route.tsx"
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin/route.tsx"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup/route.tsx"
    },
    "/(protected)": {
      "filePath": "(protected)/_layout",
      "children": [
        "/(protected)/_layout",
        "/(protected)/call/$id"
      ]
    },
    "/(protected)/_layout": {
      "filePath": "(protected)/_layout/route.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/_layout/notification",
        "/(protected)/_layout/",
        "/(protected)/_layout/chat/$id"
      ]
    },
    "/(protected)/_layout/notification": {
      "filePath": "(protected)/_layout/notification/route.tsx",
      "parent": "/(protected)/_layout"
    },
    "/(protected)/call/$id": {
      "filePath": "(protected)/call/$id/route.tsx",
      "parent": "/(protected)"
    },
    "/(protected)/_layout/": {
      "filePath": "(protected)/_layout/index.tsx",
      "parent": "/(protected)/_layout"
    },
    "/(protected)/_layout/chat/$id": {
      "filePath": "(protected)/_layout/chat/$id/route.tsx",
      "parent": "/(protected)/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
